#   +---------------------------------------------------------------------------------+
#   | This file is part of licman                                                     |
#   +---------------------------------------------------------------------------------+
#   | Copyright (c) 2025 Jesse Greathouse (https://github.com/jesse-greathouse/licman)|
#   +---------------------------------------------------------------------------------+
#   | licman may not be redistributed, copied and/or modified unless under specific   |
#   | authorization granted between the licensee and the licensor.                    |
#   |                                                                                 |
#   | licman is distributed in the hope that it will be useful,                       |
#   | but WITHOUT ANY WARRANTY; without even the implied warranty of                  |
#   | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   |
#   | License for more details.                                                       |
#   |                                                                                 |
#   | You should have received a copy of the License im the root folder of            |
#   | this project. Or see online at:                                                 |
#   | [LICENSE](https://github.com/jesse-greathouse/licman/blob/main/LICENSE)         |
#   +---------------------------------------------------------------------------------+
#   | Author: Jesse Greathouse <jesse.greathouse@gmail.com>                           |
#   +---------------------------------------------------------------------------------+

# Declare the environment variables
env APP_URL;
env SSL;
env DIR;
env BIN;
env ETC;
env OPT;
env TMP;
env VAR;
env WEB;
env PORT;
env CACHE_DIR;
env LOG_DIR;
env REDIS_HOST;

# user  __USER__;

worker_processes  6;

error_log __LOG__ error;

events {
  worker_connections 1024;
}

http {
  include       mime_types.conf;
  default_type  text/html;

  sendfile                  on;
  tcp_nopush                on;
  tcp_nodelay               on;
  keepalive_timeout         120;
  keepalive_requests        10000;
  client_max_body_size      512m;
  client_body_buffer_size   128k;

  # enable gzip compression
  gzip              on;
  gzip_vary         on;
  gzip_min_length   1000;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml text/x-component text/x-js text/richtext image/svg+xml text/xsd text/xsl image/bmp application/java application/msword application/vnd.ms-fontobject application/x-msdownload image/x-icon image/webp application/json application/vnd.ms-access application/vnd.ms-project application/x-font-otf application/vnd.ms-opentype application/vnd.oasis.opendocument.database application/vnd.oasis.opendocument.chart application/vnd.oasis.opendocument.formula application/vnd.oasis.opendocument.graphics application/vnd.oasis.opendocument.spreadsheet application/vnd.oasis.opendocument.text audio/ogg application/pdf application/vnd.ms-powerpoint application/x-shockwave-flash image/tiff application/x-font-ttf audio/wav application/vnd.ms-write application/font-woff application/vnd.ms-excel;
  gzip_comp_level   6;
  gzip_proxied      any;
  gzip_buffers      16 8k;
  # end gzip configuration

  #file caching
  open_file_cache  max=2000 inactive=10m;
  open_file_cache_valid     5m;
  open_file_cache_min_uses  2;
  open_file_cache_errors    off;
  # end file caching configuration

  access_log on;

  lua_socket_log_errors     off;
  lua_capture_error_log     100k;

  include ssl-params.conf;

  # Defines robot_rate limiting zone to ratelimit any bots
  limit_req_zone $binary_remote_addr zone=robot_rate:10m rate=10r/s;

  # Turn off code_caching, not recommended for production env
  #lua_code_cache off;

  # Include server directive for forcing SSL if applicable
  __INCLUDE_FORCE_SSL_LINE__

  map $server_port $host_with_port {
    80  $host;
    443 $host;
    default $host:$server_port;
  }

  upstream django {
    server unix:__VAR__/socket/gunicorn.sock fail_timeout=0;
  }

  server {
    listen __PORT__ __SSL__;
    server_name __DOMAINS__;
    port_in_redirect off;

    access_log __VAR__/log/access.log;

    # Set up ENV variables
    include lua_env.conf;

    # SSL cert and key directives go here
    __SSL_CERT_LINE__
    __SSL_KEY_LINE__

    set $session_secret __SESSION_SECRET__;

    root __WEB__;
    index index.html;

    # SPA React catch-all route
    location / {
      try_files $uri /index.html;
    }

    # Django upstream
    location /api/ {
      include proxy_params.conf;
      proxy_pass http://django;
    }

    # Django Admin
    location /admin/ {
      include proxy_params.conf;
      proxy_pass http://django;
    }

    # Robots.txt
    location = /robots.txt {
      limit_req zone=robot_rate burst=20 nodelay;
      return 200 "User-agent: *\nDisallow: /\n";
    }

    # Favicon
    location = /favicon.ico {
      access_log off;
      log_not_found off;
      alias __WEB__/favicon.ico;
    }

    # Ping for healthchecks
    location = /ping {
      limit_req zone=robot_rate burst=20 nodelay;
      return 200 "OK\n";
      add_header Content-Type text/plain;
    }

    # Static files with long expiration
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|map|woff2|woff|ttf|svg|eot|json)$ {
      expires 1y;
      access_log off;
      log_not_found off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Django static root
    location ^~ /static/ {
      alias __STATIC_ROOT__/;
      expires 1y;
      access_log off;
      log_not_found off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }
  }
}

daemon off;
